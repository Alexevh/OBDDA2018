/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iu;

import Excepciones.PokerExcepciones;
import controlador.ControladorJuego;
import controlador.VistaJuego;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Image;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import modelo.Apuesta;
import modelo.Carta;
import modelo.Juego;
import modelo.Participante;

public class MesaJuego extends javax.swing.JFrame implements VistaJuego {

    /* JUgador o participante aca???*/
    Participante j;

    ControladorJuego controlador;

    public ControladorJuego getControlador() {
        return controlador;
    }

    public void setControlador(ControladorJuego controlador) {
        this.controlador = controlador;
    }

    public Participante getJ() {
        return j;
    }

    public void setJ(Participante j) {
        this.j = j;
    }

    /**
     * Creates new form MesaJuego
     */
    public MesaJuego(Participante j, Juego juego) {
        initComponents();
        this.j = j;
        pintarMesa();
        /* El juego no se almacena en la vista, solo en el controlador*/
        controlador = new ControladorJuego(juego, this, j);

        this.setTitle(j.getJugador().getNombreCompleto());
        listaPagan.setVisible(true);
        txtJugadoresPagan.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtInformacion = new javax.swing.JLabel();
        imgSaldo = new javax.swing.JLabel();
        imgPozo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaParticipantes = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        btnApostar = new javax.swing.JButton();
        txtMontoApuesta = new javax.swing.JTextField();
        btnPagar = new javax.swing.JButton();
        btnPasar = new javax.swing.JButton();
        c1 = new javax.swing.JLabel();
        c2 = new javax.swing.JLabel();
        c3 = new javax.swing.JLabel();
        c4 = new javax.swing.JLabel();
        c5 = new javax.swing.JLabel();
        txtJugadoresPagan = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaPagan = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        txtInformacion.setForeground(new java.awt.Color(253, 251, 251));
        txtInformacion.setText("Cantidad de participantes");
        getContentPane().add(txtInformacion);
        txtInformacion.setBounds(260, 20, 570, 17);

        imgSaldo.setForeground(new java.awt.Color(254, 247, 247));
        imgSaldo.setText("Mi saldo");
        getContentPane().add(imgSaldo);
        imgSaldo.setBounds(30, 400, 160, 40);

        imgPozo.setForeground(new java.awt.Color(254, 254, 254));
        imgPozo.setText("Pozo actual  $: ");
        getContentPane().add(imgPozo);
        imgPozo.setBounds(440, 110, 260, 100);

        jScrollPane1.setViewportView(listaParticipantes);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 100, 90, 140);

        jLabel1.setForeground(new java.awt.Color(255, 250, 250));
        jLabel1.setText("Participantes:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 70, 100, 17);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir);
        btnSalir.setBounds(840, 420, 100, 29);

        btnApostar.setText("Apostar");
        btnApostar.setEnabled(false);
        btnApostar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApostarActionPerformed(evt);
            }
        });
        getContentPane().add(btnApostar);
        btnApostar.setBounds(290, 400, 110, 29);

        txtMontoApuesta.setText("0");
        txtMontoApuesta.setEnabled(false);
        getContentPane().add(txtMontoApuesta);
        txtMontoApuesta.setBounds(430, 400, 70, 27);

        btnPagar.setText("Pagar");
        btnPagar.setEnabled(false);
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });
        getContentPane().add(btnPagar);
        btnPagar.setBounds(540, 400, 90, 29);

        btnPasar.setText("Pasar");
        btnPasar.setEnabled(false);
        btnPasar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPasarActionPerformed(evt);
            }
        });
        getContentPane().add(btnPasar);
        btnPasar.setBounds(670, 400, 80, 29);

        c1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cartas/Invertida.gif"))); // NOI18N
        c1.setText("Card 1");
        getContentPane().add(c1);
        c1.setBounds(250, 220, 110, 150);

        c2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cartas/Invertida.gif"))); // NOI18N
        c2.setText("Card2");
        getContentPane().add(c2);
        c2.setBounds(350, 220, 110, 150);

        c3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cartas/Invertida.gif"))); // NOI18N
        c3.setText("Card3");
        getContentPane().add(c3);
        c3.setBounds(450, 220, 100, 150);

        c4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cartas/Invertida.gif"))); // NOI18N
        c4.setText("Card4");
        getContentPane().add(c4);
        c4.setBounds(550, 220, 110, 150);

        c5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cartas/Invertida.gif"))); // NOI18N
        c5.setText("Card5");
        getContentPane().add(c5);
        c5.setBounds(650, 220, 110, 150);

        txtJugadoresPagan.setForeground(new java.awt.Color(254, 254, 254));
        txtJugadoresPagan.setText("Jugadores que pagan");
        getContentPane().add(txtJugadoresPagan);
        txtJugadoresPagan.setBounds(740, 30, 170, 30);

        jScrollPane2.setViewportView(listaPagan);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(750, 60, 140, 120);

        setBounds(0, 0, 973, 500);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        salir();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnApostarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApostarActionPerformed
        apostar();
    }//GEN-LAST:event_btnApostarActionPerformed

    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
       deshabilitarHabilitarOpciones(false);
        controlador.pagar();
    }//GEN-LAST:event_btnPagarActionPerformed

    private void btnPasarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPasarActionPerformed
        pasar();

    }//GEN-LAST:event_btnPasarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApostar;
    private javax.swing.JButton btnPagar;
    private javax.swing.JButton btnPasar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel c1;
    private javax.swing.JLabel c2;
    private javax.swing.JLabel c3;
    private javax.swing.JLabel c4;
    private javax.swing.JLabel c5;
    private javax.swing.JLabel imgPozo;
    private javax.swing.JLabel imgSaldo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listaPagan;
    private javax.swing.JList listaParticipantes;
    private javax.swing.JLabel txtInformacion;
    private javax.swing.JLabel txtJugadoresPagan;
    private javax.swing.JTextField txtMontoApuesta;
    // End of variables declaration//GEN-END:variables

    /* OJO la vista jamas debe conocer nada del modelo, solo trabaja mediante el controlador*/
    @Override
    public void mostrarParticipantes(int cantidadFaltante) {

        this.txtInformacion.setText("Esperando inicio del juego, faltan : " + cantidadFaltante);

    }

    private void pintarMesa() {

        setLayout(new BorderLayout());
        JLabel background = new JLabel(new ImageIcon("src/imagenes/mesa.jpg"));

        add(background);
        background.setLayout(new FlowLayout());

    }

    private void salir() {

        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Seguro quieres salir", "Salir del juego", dialogButton);

        if (dialogResult == JOptionPane.YES_OPTION) {

            controlador.eliminarParticipante(j);
            //salirJuego();
            dispose();
        }

    }

    @Override
    public void inicioJuego(List<Participante> lista) {

        
        listaParticipantes.setListData(lista.toArray());
        this.txtInformacion.setText("Inicio el juego!!!");

    }

    @Override
    public void mostrarError(String mensaje) {

        JOptionPane.showMessageDialog(this, mensaje);

    }

    @Override
    public void actualizarMesa(List<Participante> lista) {
        ImageIcon imageIcon = new ImageIcon(new ImageIcon("src/imagenes/saldo.png").getImage().getScaledInstance(40, 60, Image.SCALE_DEFAULT));
        imgSaldo.setIcon(imageIcon);
        imgSaldo.setText("Saldo : " + j.getJugador().getSaldo());

        listaParticipantes.setListData(lista.toArray());
        
    }

    @Override
    public void inicioNuevaMano() {

        /* Aca lo que hacemos es, vemos que cartas tiene en la mano el participante y las mostramos
        en imagenes*/
        btnApostar.setEnabled(true);
        btnPasar.setEnabled(true);
        txtMontoApuesta.setEnabled(true);
        listaPagan.removeAll();

    }

    @Override
    public void inicioNuevaApuesta(String jugadorNombre, int monto) {

        btnApostar.setEnabled(false);
        txtMontoApuesta.setEnabled(false);
        deshabilitarHabilitarOpciones(true);
        txtInformacion.setText(jugadorNombre+" ha realizado una apuesta por valor $:"+monto);
        listaPagan.setVisible(true);
        txtJugadoresPagan.setVisible(true);
        listaPagan.removeAll();

    }

    private void apostar() {

        try {
            controlador.registrarApuesta(j, Integer.parseInt(txtMontoApuesta.getText()));
            deshabilitarHabilitarOpciones(false);
            btnApostar.setEnabled(false);
        } catch (PokerExcepciones ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }

    public void deshabilitarHabilitarOpciones(boolean opcion) {
        btnPagar.setEnabled(opcion);
        btnPasar.setEnabled(opcion);
    }

    @Override
    public void actualizarPozo(int valor) {
        ImageIcon pozo = new ImageIcon(new ImageIcon("src/imagenes/pozo.png").getImage().getScaledInstance(100, 100, Image.SCALE_DEFAULT));
        imgPozo.setIcon(pozo);
        imgPozo.setText("Pozo : $ " + valor);
    }

    @Override
    public void seguirJugando() {
        
        List<Participante> lista = new ArrayList();
        listaPagan.setListData(lista.toArray());
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Vas a jugar otra mano", "Otra mano?" + j.getJugador().getNombreCompleto(), dialogButton);
        
        if (dialogResult == JOptionPane.YES_OPTION) {
            
            txtInformacion.setText("Esperando apuesta");
            controlador.juegoSiguienteMano(true);
            btnApostar.setEnabled(true);
            btnPagar.setEnabled(false);
            btnPasar.setEnabled(true);
            

        } else {
            controlador.juegoSiguienteMano(false);
            controlador.eliminarParticipante(j);
            eliminarControlador();
            this.dispose();
        }
    }

    @Override
    public void salirJuego() {
        JOptionPane.showMessageDialog(this, "El jueo termino, gracias por dejar tu dinero con nosotros");
        eliminarControlador();
        this.dispose();

    }

    private void pasar() {
        deshabilitarHabilitarOpciones(false);
        btnApostar.setEnabled(false);
        controlador.pasarApuesta();

    }

    @Override
    public void mostrarGanador(String nombre, String carta) {
        JOptionPane.showMessageDialog(this, "El ganador de la ultima mano fue " + nombre + " y gano con " + carta);
    }

    @Override
    public void fuiExpulsado() {
        JOptionPane.showMessageDialog(this, "Lamentablemente su saldo no es suficiente para continuar en el juego");
        eliminarControlador();
        this.dispose();
    }

    public void eliminarControlador() {

        controlador.desregistrarControlador();
        controlador = null;
    }

    @Override
    public void actualizarMano(List<Carta> cartas) {

        ImageIcon carta1 = new ImageIcon(new ImageIcon("src/imagenes/cartas/" + cartas.get(0).getImagen()).getImage());
        // ImageIcon carta1 = new ImageIcon(new ImageIcon("src/imagenes/cartas/10c.gif").getImage().getScaledInstance(100, 100, Image.SCALE_DEFAULT));
        c1.setIcon(carta1);
        c2.setIcon(new ImageIcon(new ImageIcon("src/imagenes/cartas/" + cartas.get(1).getImagen()).getImage()));
        c3.setIcon(new ImageIcon(new ImageIcon("src/imagenes/cartas/" + cartas.get(2).getImagen()).getImage()));
        c4.setIcon(new ImageIcon(new ImageIcon("src/imagenes/cartas/" + cartas.get(3).getImagen()).getImage()));
        c5.setIcon(new ImageIcon(new ImageIcon("src/imagenes/cartas/" + cartas.get(4).getImagen()).getImage()));
    }

    @Override
    public void actualizarPagan(List<Participante> pagan) {
        listaPagan.setListData(pagan.toArray());
    }

}
